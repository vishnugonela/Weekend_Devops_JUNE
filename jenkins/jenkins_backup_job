pipeline
{ 
    agent any
      environment {
        JENKINS_HOME = "/var/lib/jenkins"
        BACKUP_ROOT  = "/backup/jenkins"
        LOG_FILE     = "/var/log/jenkins_backup.log"
        RETENTION_DAYS = 7
        TIMESTAMP = "${new Date().format('yyyyMMdd_HHmmss')}"
        BACKUP_FILE = "${env.BACKUP_ROOT}/jenkins_backup_${env.TIMESTAMP}.tar.gz"
    }

     stages
     {
        stage('Configuration')
        {
            steps 
            {
                sh '''JENKINS_HOME="/var/lib/jenkins"
               BACKUP_ROOT="/backup/jenkins"
               #
               LOG_FILE="/var/log/jenkins_backup.log"
               RETENTION_DAYS=7'''
                
            }
        }
      stage('SANITY CHECKS')
      {
        steps{
            sh ''' if [ ! -d "$JENKINS_HOME" ]; then
             echo "$(date \'+%F %T\') [ERROR] Jenkins home directory not found at $JENKINS_HOME" | tee -a "$LOG_FILE"
             exit 1
             fi
    
             if [ ! -d "$BACKUP_ROOT" ]; then
             mkdir -p "$BACKUP_ROOT" || 
             {
              echo "$(date \'+%F %T\') [ERROR] Failed to create backup directory $BACKUP_ROOT" | tee -a "$LOG_FILE"
                  exit 1
             }
             fi'''
        }
    }
        stage('BACKUP PROCESS')
      {
          steps
          {
            sh ''' if [ ! -d "$JENKINS_HOME" ]; then
            echo "$(date \'+%F %T\') [ERROR] Jenkins home directory not found at $JENKINS_HOME" | tee -a "$LOG_FILE"
            exit 1
            fi

            if [ ! -d "$BACKUP_ROOT" ]; then
            mkdir -p "$BACKUP_ROOT" || 
            {
               echo "$(date \'+%F %T\') [ERROR] Failed to create backup directory $BACKUP_ROOT" | tee -a "$LOG_FILE"
               exit 1
            }
           fi'''
          }
      }
       stage('Retention Policy') 
       {
            steps {
                sh '''
                    find "$BACKUP_ROOT" -type f -name "jenkins_backup_*.tar.gz" -mtime +$RETENTION_DAYS -exec rm -f {} \\;
                    echo "$(date '+%F %T') [INFO] Old backups older than $RETENTION_DAYS days removed." | tee -a "$LOG_FILE"
                '''
            }
        }

   }
    post
    {
        success 
        {
            sh 'echo "$(date \'+%F %T\') [INFO] Jenkins backup completed successfully." | tee -a "$LOG_FILE"'
        }
        failure 
        {
          sh 'echo "$(date \'+%F %T\') [ERROR] Jenkins backup pipeline failed." | tee -a "$LOG_FILE"'
        }
    }
   
}

